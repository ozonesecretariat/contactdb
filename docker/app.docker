FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim

ARG UV_ARGS=""

ENV UV_SYSTEM_PYTHON=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

RUN apt-get -q update \
 && apt-get install -qq \
    libpango-1.0-0 libpangoft2-1.0-0 libharfbuzz-subset0 \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN mkdir /.fs /app
WORKDIR /app
VOLUME ["/.fs"]

COPY pyproject.toml .
COPY uv.lock .
# Don't use virtualenv inside the container, as that can cause issues with
# mapped volumes. Even though uv is much faster to install stuff than pip is.
RUN uv export --no-default-groups $UV_ARGS > requirements.txt
RUN pip install -r requirements.txt

COPY docker/wait_for_services.sh /usr/local/bin/wait_for_services.sh
COPY docker/entrypoint.sh /usr/local/bin/

COPY . /app

ENTRYPOINT ["entrypoint.sh"]

EXPOSE 8000
CMD ["gunicorn", "contactdb.wsgi", "--bind", "0.0.0.0:8000"]
