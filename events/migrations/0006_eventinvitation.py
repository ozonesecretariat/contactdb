# Generated by Django 5.2.1 on 2025-05-23 09:27

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("events", "0005_eventgroup_remove_event_tags_event_groups_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="EventInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique token for invitation link",
                        unique=True,
                    ),
                ),
                (
                    "link_accessed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the invitation link has been accessed",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="When country is set, all GOV organizations in country are invited",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="event_invitations",
                        to="core.country",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="events.event",
                    ),
                ),
                (
                    "event_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="events.eventgroup",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_invitations",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(
                            ("country__isnull", False), ("event_group__isnull", False)
                        ),
                        fields=("event_group", "country"),
                        name="unique_eventgroup_country",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(
                            ("event_group__isnull", False),
                            ("organization__isnull", False),
                        ),
                        fields=("event_group", "organization"),
                        name="unique_eventgroup_organization",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(
                            ("country__isnull", False), ("event__isnull", False)
                        ),
                        fields=("event", "country"),
                        name="unique_event_country",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(
                            ("event__isnull", False), ("organization__isnull", False)
                        ),
                        fields=("event", "organization"),
                        name="unique_event_organization",
                    ),
                ],
            },
        ),
    ]
