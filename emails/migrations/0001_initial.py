# Generated by Django 4.2.11 on 2024-04-10 11:04

import ckeditor_uploader.fields
from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import emails.models
import pathlib
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.TextField()),
                (
                    "content",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        validators=[emails.models.validate_placeholders]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("groups", models.ManyToManyField(blank=True, to="core.contactgroup")),
                ("recipients", models.ManyToManyField(blank=True, to="core.contact")),
            ],
        ),
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                ("description", models.TextField()),
                (
                    "content",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        validators=[emails.models.validate_placeholders]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        storage=django.core.files.storage.FileSystemStorage(
                            base_url="/protected_media/",
                            location=pathlib.PurePosixPath(
                                "/home/kiro/PycharmProjects/contactdb/.fs/protected_media"
                            ),
                        ),
                        upload_to="email_files/",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name to use for the attachment, defaults to the uploaded filename if not specified.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="emails.email",
                    ),
                ),
            ],
            options={
                "ordering": ("email", "name", "id"),
            },
        ),
        migrations.CreateModel(
            name="SendEmailTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="id",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="description"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="created on"),
                ),
                (
                    "started_on",
                    models.DateTimeField(null=True, verbose_name="started on"),
                ),
                (
                    "completed_on",
                    models.DateTimeField(null=True, verbose_name="completed on"),
                ),
                (
                    "progress",
                    models.IntegerField(blank=True, null=True, verbose_name="progress"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "PENDING"),
                            ("RECEIVED", "RECEIVED"),
                            ("STARTED", "STARTED"),
                            ("PROGESS", "PROGESS"),
                            ("SUCCESS", "SUCCESS"),
                            ("FAILURE", "FAILURE"),
                            ("REVOKED", "REVOKED"),
                            ("REJECTED", "REJECTED"),
                            ("RETRY", "RETRY"),
                            ("IGNORED", "IGNORED"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=128,
                        verbose_name="status",
                    ),
                ),
                (
                    "job_id",
                    models.CharField(blank=True, max_length=128, verbose_name="job id"),
                ),
                (
                    "mode",
                    models.CharField(
                        choices=[
                            ("UNKNOWN", "UNKNOWN"),
                            ("SYNC", "SYNC"),
                            ("ASYNC", "ASYNC"),
                        ],
                        db_index=True,
                        default="UNKNOWN",
                        max_length=128,
                        verbose_name="mode",
                    ),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="failure reason"
                    ),
                ),
                ("log_text", models.TextField(blank=True, verbose_name="log text")),
                (
                    "sent_email",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Copy of the sent email.",
                        null=True,
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_history",
                        to="core.contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_history",
                        to="emails.email",
                    ),
                ),
            ],
            options={
                "get_latest_by": "created_on",
                "unique_together": {("email", "contact")},
            },
        ),
    ]
