# Generated by Django 4.2 on 2023-06-16 11:42

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0011_remove_registrationstatus_event_id_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="TemporaryContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_id",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                ("title", models.CharField(blank=True, max_length=30)),
                ("honorific", models.CharField(blank=True, default="", max_length=30)),
                ("respectful", models.CharField(blank=True, default="", max_length=30)),
                (
                    "first_name",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                ("last_name", models.CharField(blank=True, default="", max_length=250)),
                (
                    "designation",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "department",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "affiliation",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "primary_lang",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Primary language",
                    ),
                ),
                (
                    "second_lang",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Second language",
                    ),
                ),
                (
                    "third_lang",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Third language",
                    ),
                ),
                (
                    "phones",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                (
                    "mobiles",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                (
                    "faxes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                (
                    "emails",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                (
                    "email_ccs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                ("notes", models.TextField(blank=True, default="")),
                ("is_in_mailing_list", models.BooleanField(blank=True, default=False)),
                (
                    "is_use_organization_address",
                    models.BooleanField(blank=True, default=False),
                ),
                ("address", models.TextField(blank=True, default="")),
                ("city", models.CharField(blank=True, default="", max_length=250)),
                ("state", models.CharField(blank=True, default="", max_length=250)),
                ("country", models.CharField(blank=True, default="", max_length=250)),
                (
                    "postal_code",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("focal_point", models.BooleanField(blank=True, default=False)),
                (
                    "org_head",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="Head of organization"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.record",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResolveAllConflictsTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="id",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="description"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="created on"),
                ),
                (
                    "started_on",
                    models.DateTimeField(null=True, verbose_name="started on"),
                ),
                (
                    "completed_on",
                    models.DateTimeField(null=True, verbose_name="completed on"),
                ),
                (
                    "progress",
                    models.IntegerField(blank=True, null=True, verbose_name="progress"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "PENDING"),
                            ("RECEIVED", "RECEIVED"),
                            ("STARTED", "STARTED"),
                            ("PROGESS", "PROGESS"),
                            ("SUCCESS", "SUCCESS"),
                            ("FAILURE", "FAILURE"),
                            ("REVOKED", "REVOKED"),
                            ("REJECTED", "REJECTED"),
                            ("RETRY", "RETRY"),
                            ("IGNORED", "IGNORED"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=128,
                        verbose_name="status",
                    ),
                ),
                (
                    "job_id",
                    models.CharField(blank=True, max_length=128, verbose_name="job id"),
                ),
                (
                    "mode",
                    models.CharField(
                        choices=[
                            ("UNKNOWN", "UNKNOWN"),
                            ("SYNC", "SYNC"),
                            ("ASYNC", "ASYNC"),
                        ],
                        db_index=True,
                        default="UNKNOWN",
                        max_length=128,
                        verbose_name="mode",
                    ),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="failure reason"
                    ),
                ),
                ("log_text", models.TextField(blank=True, verbose_name="log text")),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("keep_old_data", "Keep old data"),
                            ("save_incoming_data", "Save incoming data"),
                        ],
                        max_length=60,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "get_latest_by": "created_on",
            },
        ),
    ]
